def solution(numbers):
    # 숫자를 문자열로 변환
    str_numbers = list(map(str, numbers))

    # 정렬 기준에 따라 정렬
    str_numbers.sort(key=lambda x: x * 3, reverse=True)

    # 정렬된 리스트를 이어 붙여 하나의 문자열로 생성
    largest_number = ''.join(str_numbers)

    # 모든 숫자가 0인 경우 "0" 반환
    return largest_number if largest_number[0] != '0' else '0'


#1) 문제 설명

'''0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내라. 
예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210이다.
0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, 순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 반환하도록 solution 함수를 작성해라.'''

#2) 제한 사항

'''numbers의 길이는 1 이상 100,000 이하입니다.
numbers의 원소는 0 이상 1,000 이하입니다.
정답이 너무 클 수 있으니 문자열로 바꾸어 return 합니다.'''

#3) 입출력 예시 

'''입출력 예 #1

numbers가 [3, 30, 34, 5, 9]이면, [3303459, 3303495, 3305349, ... 9534330]를 만들 수 있고, 이중 가장 큰 수는 9834330이다.'''

#4) 코드 설명

'''solution 함수에 numbers 값을 입력 받는다.
numbers 리스트를 map 함수를 이용하여 각각의 요소를 str을 사용하여 문자형으로 바꾸고 그 값을 list 함수를 사용해 리스트로 만들어 str_numbers에 저장한다.
str_numbers를 sort 함수를 사용하여 key값을 기준으로 문자열 길이 차이를 해결하기 위해 기존 요소 값들을 세배로 늘린 상태로 만들어서 각 요소 값들을 ASCI 값을 기준으로 만들어서 큰 값부터 정렬시킨다.
정렬된 리스트를 join 함수를 사용하여 하나로 합쳐서 largest_number에 저장한다.
그 후 만약 largest_number의 첫 번째 위치의 값이 0이 아니라면 largest_number의 값을 그대로 반환하고 그렇지 않다면 모든 숫자가 0이므로 0을 반환한다.'''

#문제 출처 : 프로그래머스

