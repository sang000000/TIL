def solution(s):
    a = []
    b = s.split(" ")
    for i in range(len(b)):
        for j in range(len(b[i])):
            if j % 2 == 0:
                a.append(b[i][j].upper())
            elif j % 2 != 0  :
                a.append(b[i][j].lower())
        a.append(" ")    
    answer = "".join(a[:-1])
    return answer

print(solution("try hello world"))


# 1) 문제 설명

'''문자열 s는 한 개 이상의 단어로 구성되어 있다. 각 단어는 하나 이상의 공백문자로 구분되어 있습니다. 각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하라.'''

# 2) 제한 사항

'''문자열 전체의 짝/홀수 인덱스가 아니라, 단어(공백을 기준)별로 짝/홀수 인덱스를 판단해야한다.
첫 번째 글자는 0번째 인덱스로 보아 짝수번째 알파벳으로 처리해야 한다.'''

# 3) 입출력 예시

''' 입출력 예 #1

"try hello world"는 세 단어 "try", "hello", "world"로 구성되어 있습니다. 각 단어의 짝수번째 문자를 대문자로, 홀수번째 문자를 소문자로 바꾸면 "TrY", "HeLlO", "WoRlD"이다. 따라서 "TrY HeLlO WoRlD" 를 리턴한다.'''


#3. 코드 설명
'''solution 함수에서 s의 값을 입력 받는다.
대소문자를 바꾸기 위해 a에 빈 리스트를 만들어준다.
각 단어마다 확인을 해야하므로 b에다가 공백을 기준으로 공백을 포함시켜 나누어준다.
반복문을 통해 각 단어의 길이 만큼 i의 값을 증가시키고 그 i의 값을 리스트 b의 집어넣어 리스트에 해당 위치의 값의 길이 만큼 j를 증가시키며 또 다시 반복문을 실행한다.
이중 반복문 안에서는 만약 j의 값을 2로 나누었을 때 값이 0이면, 짝수 번째이므로 리스트 b의 i에 해당하는 위치에 j번째 문자를 대문자로 변환시키고 a에 추가한다.
만약 j의 값을 2로 나누었을 때 값이 0이 아니면, 홀수 번째이므로 리스트 b의 i에 해당하는 위치에 j번째 문자를 소문자로 변환시키고 a에 추가한다.
반복문 안에 반복문이 종료되면 각 단어는 하나 이상의 공백으로 구분되어 있기 때문에 리스트 a에다가 공백을 추가해주고 다시 위 과정을 반복한다.
모든 반복문이 끝나게 되면 answer에다가 반복문에서 리스트 a에서 공백을 추가해주는 과정때문에 생긴 불필요한 마지막 공백을 제외한 리스트 a의 위치까지를 join함수를 이용해 문자열 형태로 변환하고 반환한다.  

문제 출처 : 프로그래머스'''
