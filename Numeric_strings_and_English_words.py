def solution(s):
    numbers = {"one": 1, "two": 2, "three" : 3, "four" : 4, "five": 5, "six": 6, "seven": 7, "eight": 8, "nine": 9, "zero": 0}
    for i,j in numbers.items():
        s = s.replace(i,str(j))                                
    return int(s)





#1) 문제 설명

'''네오와 프로도가 숫자놀이를 하고 있습니다. 네오가 프로도에게 숫자를 건넬 때 일부 자릿수를 영단어로 바꾼 카드를 건네주면 프로도는 원래 숫자를 찾는 게임이다.

다음은 숫자의 일부 자릿수를 영단어로 바꾸는 예시이다.
1478 → "one4seveneight"
234567 → "23four5six7"
10203 → "1zerotwozero3"
이렇게 숫자의 일부 자릿수가 영단어로 바뀌어졌거나, 혹은 바뀌지 않고 그대로인 문자열 s가 매개변수로 주어진다. s가 의미하는 원래 숫자를 return 하도록 solution 함수를 완성해라.
      숫자                                                      영단어
0	zero
1	one
2	two
3	three
4	four
5	five
6	six
7	seven
8	eight
9	nine

참고로 각 숫자에 대응되는 영단어는 다음 표와 같다.'''

#2) 제한 사항

'''1 ≤ s의 길이 ≤ 50
s가 "zero" 또는 "0"으로 시작하는 경우는 주어지지 않는다.
return 값이 1 이상 2,000,000,000 이하의 정수가 되는 올바른 입력만 s로 주어진다.'''

#3) 입출력 예시

'''입출력 예 #1

s가 "2three45sixseven"이면,  234567이 출력된다.
입출력 예 #2

s가 "123"이면,  123이 출력된다.'''

#4) 코드 설명

'''solution 함수에서 s의 값을 입력 받는다.
숫자를 영어로 입력한 것들을 숫자로 바꾸기 위해 딕셔너리를 만든다.
반복문을 통해 i와 j에 numbers라는 딕셔너리의 Key와 Value값을 계속 집어넣는다.
replace 함수를 이용하여 문자열에 i 값이 있으면 j값으로 바꾸어준다.
그 후 int함수를 이용해 정수로 바꾸어 반환한다. '''

#문제 출처 : 프로그래머스