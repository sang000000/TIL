def solution(n, a, b):
    answer = 0
    while a != b:
        a = (a + 1) // 2
        b = (b + 1) // 2
        answer += 1
    return answer


# 1) 문제 설명

"""△△ 게임대회가 개최되었다. 이 대회는 N명이 참가하고, 토너먼트 형식으로 진행된다. N명의 참가자는 각각 1부터 N번을 차례대로 배정받는다. 그리고, 1번↔2번, 3번↔4번, ... , N-1번↔N번의 참가자끼리 게임을 진행한다. 각 게임에서 이긴 사람은 다음 라운드에 진출할 수 있다. 이때, 다음 라운드에 진출할 참가자의 번호는 다시 1번부터 N/2번을 차례대로 배정받는다. 만약 1번↔2번 끼리 겨루는 게임에서 2번이 승리했다면 다음 라운드에서 1번을 부여받고, 3번↔4번에서 겨루는 게임에서 3번이 승리했다면 다음 라운드에서 2번을 부여받게 된다. 게임은 최종 한 명이 남을 때까지 진행된다.
이때, 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 궁금해졌다. 게임 참가자 수 N, 참가자 번호 A, 경쟁자 번호 B가 함수 solution의 매개변수로 주어질 때, 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 반환하는 solution 함수를 완성해라. 단, A번 참가자와 B번 참가자는 서로 붙게 되기 전까지 항상 이긴다고 가정한다.
"""
# 2) 제한 사항

"""N : 2 이상 2의 20제곱 이하인 자연수 (2의 지수 승으로 주어지므로 부전승은 발생하지 않습니다.)
A, B : N 이하인 자연수 (단, A ≠ B 입니다.)"""


# 3) 입출력 예시

"""입출력 예 #1

N이 8이고 A가 4이고 B가 7이면, 첫 번째 라운드에서 4번 참가자는 3번 참가자와 붙게 되고, 7번 참가자는 8번 참가자와 붙게 된다. 항상 이긴다고 가정했으므로 4번 참가자는 다음 라운드에서 2번이 되고, 7번 참가자는 4번이 된다. 두 번째 라운드에서 2번은 1번과 붙게 되고, 4번은 3번과 붙게 된다. 항상 이긴다고 가정했으므로 2번은 다음 라운드에서 1번이 되고, 4번은 2번이 된다. 세 번째 라운드에서 1번과 2번으로 두 참가자가 붙게 되므로 3을 반환하면 된다."""

# 4) 코드 설명

"""solution 함수에서 n, a, b의 값을 입력 받는다.
몇 라운드에서 만나는지 세기 위해 answer은 초기 값을 0으로 준다.
while문을 통해서 a와 b의 값이 다를 때 동안 반복한다.
while문 안에서는 a의 값을 a+1한 값 나누기 2를 하여 몫을 저장해주고 b도 b+1한 값 나누기 2를 하고 몫을 저장하여 다음 라운드 번호를 알아낸다.
그 후 answer에 값을 1 더한다.
만약 a와 b의 값이 같다면 while문은 종료 될 것이고 그러면 서로 만났다는 뜻이므로, answer 값을 반환한다."""

# 문제 출처 : 프로그래머스
